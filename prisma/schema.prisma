// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Unit {
  id          String @id @default(uuid())
  name        String
  description String
}

model Farmer {
  id String @id @default(uuid())

  firstName String
  lastName  String
  username  String  @unique
  email     String  @unique
  phone     String  @unique
  address   String
  imageUrl  String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  field Field[]
}

model Category {
  id          String @id @default(uuid())
  name        String
  description String
  slug        String @unique
}

enum JobExperience {
  NONE
  ONE
  TWO
  FIVE
  TEN
  GREATER_THAN_TEN
}

enum Gender {
  MALE
  FEMALE
  NONE
}

enum JobWorkingState {
  PART_TIME
  FULL_TIME
}

model Job {
  id          String @id @default(uuid())
  name        String
  description String
  requirement String
  rights      String
  workingTime String
  wage        String
  slug        String @unique

  quantity     Int
  experience   JobExperience
  gender       Gender
  workingState JobWorkingState

  published Boolean  @default(false)
  expiredAt DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Field {
  id String @id @default(uuid())

  farmerId String
  farmer   Farmer @relation(fields: [farmerId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Crop      Crop[]
}

model Crop {
  id   String @id @default(uuid())
  name String

  plantingDate        DateTime
  expectedHarvestDate DateTime

  fieldId String
  field   Field  @relation(fields: [fieldId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
